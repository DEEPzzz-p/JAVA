import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.List;

class Book {
    private String title;
    private String author;
    private String isbn;

    public Book(String title, String author, String isbn) {
        this.title = title;
        this.author = author;
        this.isbn = isbn;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getIsbn() {
        return isbn;
    }

    @Override
    public String toString() {
        return "Title: " + title + ", Author: " + author + ", ISBN: " + isbn;
    }
}

class Library {
    private List<Book> books;

    public Library() {
        books = new ArrayList<>();
    }

    public void addBook(Book book) {
        books.add(book);
    }

    public List<Book> searchByTitle(String title) {
        List<Book> foundBooks = new ArrayList<>();
        for (Book book : books) {
            if (book.getTitle().toLowerCase().contains(title.toLowerCase())) {
                foundBooks.add(book);
            }
        }
        return foundBooks;
    }

    public boolean deleteBookByIsbn(String isbn) {
        return books.removeIf(book -> book.getIsbn().equals(isbn));
    }

    public List<Book> getBooks() {
        return books;
    }
}

public class LibraryManagementSystemGUI extends JFrame {
    private Library library;
    private JTextArea outputArea;

    public LibraryManagementSystemGUI() {
        library = new Library();

        // GUI Components
        outputArea = new JTextArea(15, 40);
        outputArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(outputArea);

        JButton addBookButton = new JButton("Add Book");
        JButton searchBookButton = new JButton("Search Book by Title");
        JButton deleteBookButton = new JButton("Delete Book by ISBN");
        JButton displayBooksButton = new JButton("Display All Books");
        JButton clearOutputButton = new JButton("Clear Output");

        // Panel for buttons
        JPanel buttonPanel = new JPanel(new GridLayout(5, 1, 10, 10));
        buttonPanel.add(addBookButton);
        buttonPanel.add(searchBookButton);
        buttonPanel.add(deleteBookButton);
        buttonPanel.add(displayBooksButton);
        buttonPanel.add(clearOutputButton);

        // Frame Layout
        setLayout(new BorderLayout());
        add(scrollPane, BorderLayout.CENTER);
        add(buttonPanel, BorderLayout.EAST);

        // Button Actions
        addBookButton.addActionListener(e -> addBook());
        searchBookButton.addActionListener(e -> searchBook());
        deleteBookButton.addActionListener(e -> deleteBook());
        displayBooksButton.addActionListener(e -> displayBooks());
        clearOutputButton.addActionListener(e -> outputArea.setText(""));

        // Frame Properties
        setTitle("Library Management System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void addBook() {
        String title = JOptionPane.showInputDialog(this, "Enter book title:");
        if (title == null || title.trim().isEmpty()) return;

        String author = JOptionPane.showInputDialog(this, "Enter book author:");
        if (author == null || author.trim().isEmpty()) return;

        String isbn = JOptionPane.showInputDialog(this, "Enter book ISBN:");
        if (isbn == null || isbn.trim().isEmpty()) return;

        Book newBook = new Book(title, author, isbn);
        library.addBook(newBook);
        outputArea.append("Added: " + newBook + "\n");
    }

    private void searchBook() {
        String title = JOptionPane.showInputDialog(this, "Enter title to search:");
        if (title == null || title.trim().isEmpty()) return;

        List<Book> foundBooks = library.searchByTitle(title);
        if (foundBooks.isEmpty()) {
            outputArea.append("No books found with the title: " + title + "\n");
        } else {
            outputArea.append("Books found:\n");
            for (Book book : foundBooks) {
                outputArea.append(book + "\n");
            }
        }
    }

    private void deleteBook() {
        String isbn = JOptionPane.showInputDialog(this, "Enter ISBN to delete:");
        if (isbn == null || isbn.trim().isEmpty()) return;

        boolean removed = library.deleteBookByIsbn(isbn);
        if (removed) {
            outputArea.append("Deleted book with ISBN: " + isbn + "\n");
        } else {
            outputArea.append("No book found with ISBN: " + isbn + "\n");
        }
    }

    private void displayBooks() {
        List<Book> books = library.getBooks();
        if (books.isEmpty()) {
            outputArea.append("No books available in the library.\n");
        } else {
            outputArea.append("Books in the library:\n");
            for (Book book : books) {
                outputArea.append(book + "\n");
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(LibraryManagementSystemGUI::new);
    }
}
